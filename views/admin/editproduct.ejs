<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Byteverse | User-management</title>
    <link rel="stylesheet" href="/css/admin/addproduct.css">
   <!-- Cropper.js CSS -->
   <link rel="stylesheet" href="https://unpkg.com/cropperjs/dist/cropper.min.css" />
   <link href="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.12/cropper.min.css" rel="stylesheet" />
   <script src="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.12/cropper.min.js" async></script>
   <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>

</head>

<body>
    <div class="dashboard-container">
        <!-- Sidebar -->
        <aside class="unique-sidebar">
            <div class="unique-sidebar-header">
                <h2>Byteverse</h2>
            </div>
            <ul class="unique-sidebar-menu">
                <li><a href="/admin/dashboard">Dashboard</a></li>
                <li><a href="/admin/user-management">Users</a></li>
                <li class="active"><a href="#">Products</a></li>
                <li><a href="/admin/order-management">Orders</a></li>
                <li><a href="/admin/category-management">Categories</a></li>
                <li><a href="#">Coupon</a></li>
                <li><a href="#">Offers</a></li>
                <li><a href="#">Support</a></li>
                <li><a href="#">Settings</a></li>
            </ul>
        </aside>
        <!-- Main Content -->
        <div class="product-list-container">
            <h1>Edit Product</h1>

            <!-- Breadcrumbs -->
            <nav class="breadcrumbs">
                <a href="/admin/dashboard">Dashboard</a>
                <span>&gt;</span>
                <a href="/admin/product-management">Product-Management</a>
                <span>&gt;</span>
                <a href="#">Edit-product</a>
            </nav>

            <form id="product-form" enctype="multipart/form-data" method="POST" action="/admin/product-management/edit-product/<%= product._id %>">
                <div class="form-group">
                    <label for="name">Product Name:</label>
                    <input type="text" id="name" name="name" value="<%= product.name %>" onkeyup="validateName()">
                    <span class="error" id="name-error"></span>

                </div>
                <div class="form-group">
                    <label for="brand">Brand:</label>
                    <select id="brand" name="brand" onchange="validateBrand()">
                        <option value="" disabled>Select a brand</option>
                        <% ["Apple", "Dell", "HP", "Lenovo", "Asus", "Acer", "Microsoft", "MSI", "Razer", "Samsung", "Toshiba", "Sony", "Huawei", "Xiaomi", "Alienware", "Gigabyte", "LG"].forEach(function(brand) { %>
                            <option value="<%= brand %>" <%= product.brand === brand ? 'selected' : '' %>><%= brand %></option>
                        <% }); %>
                    </select>
                    <span class="error" id="brand-error"></span>
                </div>
                <div class="form-group">
                    <label for="category">Category:</label>
                    <select id="category" name="category" onchange="validateCategory()">
                        <option value="" disabled>Select a category</option>
                        <% categories.forEach(function(category) { %>
                            <option value="<%= category._id %>" <%= product.category.toString() === category._id.toString() ? 'selected' : '' %>><%= category.name %></option>
                        <% }); %>
                    </select>
                    <span class="error" id="category-error"></span>
                </div>
                <div class="form-group">
                    <label for="price">Price:</label>
                    <input type="number" id="price" name="price" value="<%= product.price %>" oninput="validatePrice()" >
                    <span class="error" id="price-error"></span>
                </div>
                <div class="form-group">
                    <label for="stock">Stock:</label>
                    <input type="number" id="stock" name="stock" value="<%= product.stock %>" oninput="validateStock()">
                    <span class="error" id="stock-error"></span>

                </div>
                <div class="form-group">
                    <label for="processor-brand">Processor Brand:</label>
                    <select id="processor-brand" name="specifications[processor][brand]" onchange="validateProcessorBrand()">
                        <option value="" disabled>Select a processor brand</option>
                        <option value="Intel" <%= product.specifications.processor.brand === 'Intel' ? 'selected' : '' %>>Intel</option>
                        <option value="AMD" <%= product.specifications.processor.brand === 'AMD' ? 'selected' : '' %>>AMD</option>
                    </select>
                    <span class="error" id="processor-brand-error"></span>
                </div>
                <div class="form-group">
                    <label for="processor-model">Processor Model:</label>
                    <input type="text" id="processor-model" name="specifications[processor][model]" value="<%= product.specifications.processor.model %>" >
                </div>
                <div class="form-group">
                    <label for="processor-cores">Processor Cores:</label>
                    <input type="number" id="processor-cores" name="specifications[processor][cores]" value="<%= product.specifications.processor.cores %>" >
                </div>
                <div class="form-group">
                    <label for="processor-speed">Processor Speed:</label>
                    <input type="text" id="processor-speed" name="specifications[processor][speed]" value="<%= product.specifications.processor.speed %>" >
                </div>
                <div class="form-group">
                    <label for="ram-size">RAM Size (GB):</label>
                    <select id="ram-size" name="specifications[ram][size]" >
                        <option value="" disabled>Select RAM size</option>
                        <option value="4" <%= product.specifications.ram.size == '4' ? 'selected' : '' %>>4 GB</option>
                        <option value="8" <%= product.specifications.ram.size == '8' ? 'selected' : '' %>>8 GB</option>
                        <option value="16" <%= product.specifications.ram.size == '16' ? 'selected' : '' %>>16 GB</option>
                        <option value="32" <%= product.specifications.ram.size == '32' ? 'selected' : '' %>>32 GB</option>
                    </select>
                </div>
                <div class="form-group">
                    <label for="ram-type">RAM Type:</label>
                    <select id="ram-type" name="specifications[ram][type]" >
                        <option value="" disabled>Select RAM type</option>
                        <option value="DDR4" <%= product.specifications.ram.type === 'DDR4' ? 'selected' : '' %>>DDR4</option>
                        <option value="DDR5" <%= product.specifications.ram.type === 'DDR5' ? 'selected' : '' %>>DDR5</option>
                    </select>
                </div>
                <div class="form-group">
                    <label for="storage-type">Storage Type:</label>
                    <select id="storage-type" name="specifications[storage][type]" >
                        <option value="" disabled>Select storage type</option>
                        <option value="SSD" <%= product.specifications.storage.type === 'SSD' ? 'selected' : '' %>>SSD</option>
                        <option value="HDD" <%= product.specifications.storage.type === 'HDD' ? 'selected' : '' %>>HDD</option>
                        <option value="Hybrid" <%= product.specifications.storage.type === 'Hybrid' ? 'selected' : '' %>>Hybrid</option>
                    </select>
                </div>
                <div class="form-group">
                    <label for="storage-capacity">Storage Capacity:</label>
                    <select id="storage-capacity" name="specifications[storage][capacity]" >
                        <option value="" disabled>Select storage capacity</option>
                        <option value="256GB" <%= product.specifications.storage.capacity === '256GB' ? 'selected' : '' %>>256 GB</option>
                        <option value="512GB" <%= product.specifications.storage.capacity === '512GB' ? 'selected' : '' %>>512 GB</option>
                        <option value="1TB" <%= product.specifications.storage.capacity === '1TB' ? 'selected' : '' %>>1 TB</option>
                        <option value="2TB" <%= product.specifications.storage.capacity === '2TB' ? 'selected' : '' %>>2 TB</option>
                    </select>
                </div>
                <div class="form-group">
                    <label for="display-size">Display Size:</label>
                    <input type="text" id="display-size" name="specifications[display][size]" value="<%= product.specifications.display && product.specifications.display.size ? product.specifications.display.size : '' %>" >
                </div>
                
                <div class="form-group">
                    <label for="display-resolution">Display Resolution:</label>
                    <input type="text" id="display-resolution" name="specifications[display][resolution]" value="<%= product.specifications.display && product.specifications.display.resolution ? product.specifications.display.resolution : '' %>" >
                </div>
                <div class="form-group">
                    <label for="graphics-brand">Graphics Card Brand:</label>
                    <select id="graphics-brand" name="specifications[graphics][brand]" >
                        <option value="" disabled>Select a graphics brand</option>
                        <option value="NVIDIA" <%= product.specifications.graphics && product.specifications.graphics.brand === 'NVIDIA' ? 'selected' : '' %>>NVIDIA</option>
                        <option value="AMD" <%= product.specifications.graphics && product.specifications.graphics.brand === 'AMD' ? 'selected' : '' %>>AMD</option>
                    </select>
                </div>
                <div class="form-group">
                    <label for="graphics-model">Graphics Model:</label>
                    <input type="text" id="graphics-model" name="specifications[graphics][model]" value="<%= product.specifications.graphics && product.specifications.graphics.model || '' %>" >
                </div>
                <div class="form-group">
                    <label for="graphics-memory">Graphics Memory:</label>
                    <input type="text" id="graphics-memory" name="specifications[graphics][memory]" value="<%= product.specifications.graphics && product.specifications.graphics.memory || '' %>" >
                </div>
                <div class="form-group">
                    <label for="battery-type">Battery Type:</label>
                    <select id="battery-type" name="specifications[battery][type]" >
                        <option value="" disabled>Select battery type</option>
                        <option value="Lithium-ion" <%= product.specifications.battery && product.specifications.battery.type === 'Lithium-ion' ? 'selected' : '' %>>Lithium-ion</option>
                        <option value="Lithium-polymer" <%= product.specifications.battery && product.specifications.battery.type === 'Lithium-polymer' ? 'selected' : '' %>>Lithium-polymer</option>
                    </select>
                </div>
                <div class="form-group">
                    <label for="battery-capacity">Battery Capacity:</label>
                    <input type="text" id="battery-capacity" name="specifications[battery][capacity]" value="<%= product.specifications.battery && product.specifications.battery.capacity || '' %>" >
                </div>
                
                <div class="form-group">
                    <label for="os">Operating System:</label>
                    <select id="os" name="specifications[os]" >
                        <option value="" disabled>Select operating system</option>
                        <option value="Windows" <%= product.specifications.os === 'Windows' ? 'selected' : '' %>>Windows</option>
                        <option value="macOS" <%= product.specifications.os === 'macOS' ? 'selected' : '' %>>macOS</option>
                        <option value="Linux" <%= product.specifications.os === 'Linux' ? 'selected' : '' %>>Linux</option>
                        <option value="Chrome OS" <%= product.specifications.os === 'Chrome OS' ? 'selected' : '' %>>Chrome OS</option>
                    </select>
                </div>
                <div class="form-group">
                    <label for="warranty">Warranty:</label>
                    <input type="text" id="warranty" name="warranty" value="<%= product.warranty || '' %>" >
                </div>
                <div class="form-group">
                    <label for="images">Upload Product Images (Minimum 3):</label>
                    <div id="image-upload-container">
                        <!-- Existing Images -->
                        <% product.images.forEach((image, index) => { %>
                            <div class="image-upload">
                                <img id="image-preview-<%= index %>" class="image-preview" src="/<%= image %>" style="display: block; max-width: 200px;" />
                                <input type="file" accept="image/*" class="image-input" onchange=`initializeCropper(this, '/<%= index %>')` />
                                <input type="file" name="croppedImage[]" id="croppedImage-<%= index %>" accept="image/*" hidden />
                                <button type="button" class="crop-btn" onclick=`cropImage(<%= index %>)`>Crop</button>
                                <input type="radio" name="primaryImageIndex" value="<%= index %>"> Set as Primary
                            </div>
                        <% }); %>
                    </div>
                    <button type="button" id="add-image-btn">Add More Images</button>
                </div>
                
                <button type="submit">Update Product</button>
            </form>
        </div>

        <script src="/javascripts/admin/product"></script>
        <script>
            function base64ToFile(base64, filename) {
                 const arr = base64.split(",");
                 const mime = arr[0].match(/:(.*?);/)[1];
                 const bstr = atob(arr[1]);
                 let n = bstr.length;
                 const u8arr = new Uint8Array(n);
 
                 while (n--) {
                     u8arr[n] = bstr.charCodeAt(n);
                 }
 
                 return new File([u8arr], filename, { type: mime });
             }
 
             let croppers = []; // Store cropper instances
             let croppedImages = []; // Store cropped images for form submission
 
             // Initialize Cropper.js when an image is selected
             function initializeCropper(input, index) {
                 if (input.files && input.files[0]) {
                     const reader = new FileReader();
                     reader.onload = function (e) {
                         const imgElement = document.getElementById(`image-preview-${index}`);
                         const croppedImage = document.getElementById(`croppedImage-${index}`);
                         imgElement.src = e.target.result;
                         imgElement.style.display = "block";
 
                         // Initialize cropper after image is loaded
                         if (croppers[index]) {
                             croppers[index].destroy(); // Destroy any existing cropper before initializing a new one
                         }
 
                         croppers[index] = new Cropper(imgElement, {
                             aspectRatio: 1, // Adjust aspect ratio as needed
                             viewMode: 1,
                             background: false,
                         });
                     };
                     reader.readAsDataURL(input.files[0]);
                 }
             }
 
             // Crop the image and replace the preview with the cropped version
             function cropImage(index) {
                //  console.log(index);
                 const cropper = croppers[index];
                 if (cropper) {
                     const croppedCanvas = cropper.getCroppedCanvas();
                     // Convert the cropped image to a base64 string for JSON submission
                     const base64Image = croppedCanvas.toDataURL("image/jpeg");
 
                     croppedImages[index] = base64Image; // Store base64 image in the array
 
                     // Convert Base64 to File
                     const file = base64ToFile(croppedImages[index], `image[${index}].png`);
 
                     // Create a DataTransfer object to set the file input
                     const dataTransfer = new DataTransfer();
                     dataTransfer.items.add(file);
 
                     // Set the file input's files to the DataTransfer object
                     const fileInput = document.getElementById(`croppedImage-${index}`);
                     fileInput.files = dataTransfer.files;
 
                     // Replace the canvas with the actual cropped image preview
                     const imgElement = document.getElementById(`image-preview-${index}`);
                     imgElement.src = base64Image; // Set the cropped image as the new source
                     imgElement.style.display = "block"; // Ensure it's visible
 
                     // Destroy the cropper instance
                     cropper.destroy();
                     croppers[index] = null; // Clear the cropper instance
                 }
             }
 
             // Add more image upload inputs dynamically
             document.getElementById("add-image-btn").addEventListener("click", function () {
                 const container = document.getElementById("image-upload-container");
                 const newIndex = container.getElementsByClassName("image-upload").length;
 
                 const newImageUpload = `
                     <div class="image-upload">
                         <input type="file" accept="image/*" class="image-input" onchange="initializeCropper(this, ${newIndex})">
                         <input type="file" name="croppedImage[]" id="croppedImage-${newIndex}" accept="image/*" hidden/>
                         <img id="image-preview-${newIndex}" class="image-preview" style="display:none; max-width: 200px;"/>
                         <button type="button" class="crop-btn" onclick="cropImage(${newIndex})">Crop</button>
                     </div> 
                 `;
                 container.insertAdjacentHTML("beforeend", newImageUpload);
             });
 
             const error = document.getElementById("error");
             if (error) {
                 setTimeout(() => {
                     error.style.display = "none";
                 }, 3000);
             }
         </script>
        
</body>

</html>