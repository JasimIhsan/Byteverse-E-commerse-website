<!DOCTYPE html>
<html lang="en">
    <head>
        <meta charset="UTF-8" />
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <title>Byteverse | Coupon Management</title>
        <link rel="stylesheet" href="/css/admin/coupon.css" />
        <!-- Include SweetAlert2 CSS -->
        <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.css" />
        <!-- Include SweetAlert2 JS -->
        <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.all.min.js"></script>
    </head>

    <body>
        <div class="dashboard-container">
            <!-- Sidebar -->
            <aside class="unique-sidebar">
                <div class="unique-sidebar-header">
                    <h2>Byteverse</h2>
                </div>
                <ul class="unique-sidebar-menu">
                    <li><a href="/admin/dashboard">Dashboard</a></li>
                    <li><a href="/admin/user-management">Users</a></li>
                    <li><a href="/admin/product-management">Products</a></li>
                    <li><a href="/admin/order-management">Orders</a></li>
                    <li><a href="/admin/category-management">Categories</a></li>
                    <li class="active"><a href="">Coupons</a></li>
                    <li><a href="/admin/offer-management">Offers</a></li>
                    <li><a href="#">Support</a></li>
                    <li><a href="#">Settings</a></li>
                </ul>
            </aside>
            <!-- Main Content -->
            <div class="product-list-container">
                <h1>Coupon Management</h1>

                <!-- Breadcrumbs -->
                <nav class="breadcrumbs">
                    <a href="/admin/dashboard">Dashboard</a>
                    <span>&gt;</span>
                    <a href="#">Coupon Management</a>
                </nav>

                <div class="product-search-filter">
                    <div style="display: flex">
                        <form action="/admin/coupon-management" method="get">
                            <input type="text" name="search" placeholder="Search products..." class="search-input" value="<%= search %>" />
                            <button class="add-product-btn" type="submit">Search</button>
                        </form>
                        <% if (search) { %>
                        <form action="/admin/coupon-management" method="GET" style="margin-left: 10px">
                            <input type="hidden" name="search" value="" />
                            <button type="submit" class="add-product-btn">Show All</button>
                        </form>
                        <% } %>
                    </div>
                    <!-- Button to trigger the modal -->
                    <button class="add-product-btn" id="addCouponBtn">+ Add Coupon</button>
                </div>

                <!-- Coupons Table -->
                <table class="product-table">
                    <thead>
                        <tr>
                            <th>SI No</th>
                            <th>Coupon Code</th>
                            <th>Discount</th>
                            <th>Minimum Spend</th>
                            <th>Expiry Date</th>
                            <th>Used Count</th>
                            <th>Usage Limit</th>
                            <th>Action</th>
                        </tr>
                    </thead>
                    <tbody>
                        <% if (coupons.length > 0) { %> <% coupons.forEach(function(coupon, index) { %>
                        <tr>
                            <td><%= index + 1 %></td>
                            <td><%= coupon.code %></td>
                            <td>₹<%= coupon.discount.toFixed(2) %></td>
                            <td>₹<%= coupon.minimumSpend.toFixed(2) %></td>
                            <td><%= new Date(coupon.expiryDate).toLocaleDateString() %></td>
                            <td><%= coupon.usedCount %></td>
                            <td><%= coupon.usageLimit ? coupon.usageLimit : '-' %></td>
                            <td style="display: flex">
                                <button class="action-btn view-btn" onclick="toggleCouponStatus('<%= coupon._id %>', '<%= coupon.isActive ? 'Deactivate' : 'Active' %>')" style="background-color: <%= coupon.isActive ? 'red' : 'green' %>; color: white;"><%= coupon.isActive ? 'Deactivate' : 'Activate' %></button>
                                <button class="action-btn view-btn" onclick="openEditCouponModal('<%= coupon._id %>')">Edit</button>
                                <button class="action-btn delete-btn" onclick="deleteCoupon('<%= coupon._id %>')">Delete</button>
                            </td>
                        </tr>
                        <% }); %> <% } else { %>
                        <tr>
                            <td colspan="8">No coupons available.</td>
                        </tr>
                        <% } %>
                    </tbody>
                </table>

                <!-- Pagination -->
                <div class="pagination">
                    <% if (currentPage > 1) { %>
                    <a href="/admin/coupon-management?page=<%= currentPage - 1 %>&search=<%= search %>" class="page-btn">Previous</a>
                    <% } else { %>
                    <span class="page-btn disabled">Previous</span>
                    <!-- Disabled if on the first page -->
                    <% } %>

                    <div class="pagination-buttons">
                        <% for (let i = 1; i <= totalPages; i++) { %>
                        <a href="/admin/coupon-management?page=<%= i %>&search=<%= search %>" class="page-btn <%= currentPage === i ? 'active' : '' %>"><%= i %></a>
                        <% } %>
                    </div>

                    <% if (currentPage < totalPages) { %>
                    <a href="/admin/coupon-management?page=<%= currentPage + 1 %>&search=<%= search %>" class="page-btn">Next</a>
                    <% } else { %>
                    <span class="page-btn disabled">Next</span>
                    <!-- Disabled if on the last page -->
                    <% } %>
                </div>
            </div>
        </div>

        <!-- Modal Structure -->
        <div id="addCouponModal" class="custom-modal">
            <div class="custom-modal-content">
                <span class="custom-modal-close">&times;</span>
                <h2>Add New Coupon</h2>
                <form id="couponForm">
                    <div class="form-group">
                        <label for="couponCode">Coupon Code</label>
                        <input type="text" id="couponCode" name="couponCode" class="form-control" required />
                        <span class="error" id="couponCodeError" style="color: red; display: none; font-size: 0.8rem; margin-top: 5px"></span>
                    </div>
                    <div class="form-group">
                        <label for="discountAmount">Discount (Flat Discount)</label>
                        <input type="number" id="discountAmount" name="discountAmount" class="form-control" required />
                        <span class="error" id="discountAmountError" style="color: red; display: none; font-size: 0.8rem; margin-top: 5px"></span>
                    </div>
                    <div class="form-group">
                        <label for="expiryDate">Expiry Date</label>
                        <input type="date" id="expiryDate" name="expiryDate" class="form-control" required />
                        <span class="error" id="expiryDateError" style="color: red; display: none; font-size: 0.8rem; margin-top: 5px"></span>
                    </div>
                    <div class="form-group">
                        <label for="usageLimit">Usage Limit</label>
                        <input type="number" id="usageLimit" name="usageLimit" class="form-control" />
                        <span class="error" id="usageLimitError" style="color: red; display: none; font-size: 0.8rem; margin-top: 5px"></span>
                    </div>
                    <div class="form-group">
                        <label for="minimumSpend">Minimum Spend</label>
                        <input type="number" id="minimumSpend" name="minimumSpend" class="form-control" />
                        <span class="error" id="minimumSpendError" style="color: red; display: none; font-size: 0.8rem; margin-top: 5px"></span>
                    </div>
                    <button type="button" id="submitCouponBtn" class="btn btn-primary" onclick="submitCoupon()">Add Coupon</button>
                </form>
            </div>
        </div>
        <!-- Edit Coupon Modal -->
        <div id="editCouponModal" class="custom-modal" style="display: none">
            <div class="custom-modal-content">
                <h2>Edit Coupon</h2>
                <form id="editCouponForm">
                    <input type="hidden" id="editCouponId" name="editCouponId" />
                    <div class="form-group">
                        <label for="editCouponCode">Coupon Code</label>
                        <input type="text" id="editCouponCode" name="editCouponCode" class="form-control" required />
                        <span class="error" id="editCouponCodeError" style="color: red; display: none; font-size: 0.8rem; margin-top: 5px"></span>
                    </div>
                    <div class="form-group">
                        <label for="editDiscountAmount">Discount (Flat Discount)</label>
                        <input type="number" id="editDiscountAmount" name="editDiscountAmount" class="form-control" required />
                        <span class="error" id="editDiscountAmountError" style="color: red; display: none; font-size: 0.8rem; margin-top: 5px"></span>
                    </div>
                    <div class="form-group">
                        <label for="editExpiryDate">Expiry Date</label>
                        <input type="date" id="editExpiryDate" name="editExpiryDate" class="form-control" required />
                        <span class="error" id="editExpiryDateError" style="color: red; display: none; font-size: 0.8rem; margin-top: 5px"></span>
                    </div>
                    <div class="form-group">
                        <label for="editUsageLimit">Usage Limit</label>
                        <input type="number" id="editUsageLimit" name="editUsageLimit" class="form-control" />
                        <span class="error" id="editUsageLimitError" style="color: red; display: none; font-size: 0.8rem; margin-top: 5px"></span>
                    </div>
                    <div class="form-group">
                        <label for="editMinimumSpend">Minimum Spend</label>
                        <input type="number" id="editMinimumSpend" name="editMinimumSpend" class="form-control" />
                        <span class="error" id="editMinimumSpendError" style="color: red; display: none; font-size: 0.8rem; margin-top: 5px"></span>
                    </div>
                    <button type="button" id="submitEditCouponBtn" class="btn btn-primary" onclick="submitEditCoupon()">Update Coupon</button>
                </form>
            </div>
        </div>

        <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
        <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
        <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>

        <!-- Bootstrap JS -->

        <script>
            function deleteCoupon(couponId) {
                Swal.fire({
                    title: "Are you sure?",
                    text: "You won't be able to revert this!",
                    icon: "warning",
                    showCancelButton: true,
                    confirmButtonColor: "#3085d6",
                    cancelButtonColor: "#d33",
                    confirmButtonText: "Yes, delete it!",
                }).then((result) => {
                    if (result.isConfirmed) {
                        axios
                            .delete(`/admin/coupon-management/delete/${couponId}`)
                            .then((response) => {
                                Swal.fire({
                                    icon: "success",
                                    title: "Coupon deleted successfully",
                                    customClass: {
                                        confirmButton: "your-custom-class",
                                    },
                                }).then(() => {
                                    window.location.reload();
                                });
                            })
                            .catch((error) => {
                                console.error("Error in Axios request:", error);
                                Swal.fire({
                                    icon: "error",
                                    title: "Failed to delete coupon",
                                    customClass: {
                                        confirmButton: "your-custom-class",
                                    },
                                });
                            });
                    }
                });
            }

            const modal = document.getElementById("addCouponModal");
            const btn = document.getElementById("addCouponBtn");
            const span = document.getElementsByClassName("custom-modal-close")[0];

            btn.onclick = function () {
                modal.style.display = "block";
            };

            span.onclick = function () {
                modal.style.display = "none";
            };

            window.onclick = function (event) {
                if (event.target == modal) {
                    modal.style.display = "none";
                }
            };

            // Real-time validation functions
            // Real-time validation functions
            function validateCouponCode() {
                const couponCode = document.getElementById("couponCode").value.trim();
                const couponCodeError = document.getElementById("couponCodeError");

                if (!couponCode) {
                    couponCodeError.textContent = "Coupon code cannot be empty.";
                    couponCodeError.style.display = "block";
                    return false;
                }
                couponCodeError.style.display = "none";
                return true;
            }

            function validateDiscountAmount() {
                const discountAmount = parseFloat(document.getElementById("discountAmount").value);
                const discountAmountError = document.getElementById("discountAmountError");

                if (isNaN(discountAmount) || discountAmount < 1) {
                    discountAmountError.textContent = "Discount is required and must be at least 1.";
                    discountAmountError.style.display = "block";
                    return false;
                }
                discountAmountError.style.display = "none";
                return true;
            }

            function validateExpiryDate() {
                const expiryDateValue = document.getElementById("expiryDate").value;
                const expiryDate = new Date(expiryDateValue);
                const today = new Date();
                const expiryDateError = document.getElementById("expiryDateError");

                if (!expiryDateValue) {
                    expiryDateError.textContent = "Expiry date cannot be empty.";
                    expiryDateError.style.display = "block";
                    return false;
                }
                if (expiryDate <= today) {
                    expiryDateError.textContent = "Expiry date must be in the future.";
                    expiryDateError.style.display = "block";
                    return false;
                }
                expiryDateError.style.display = "none";
                return true;
            }

            function validateUsageLimit() {
                const usageLimit = parseInt(document.getElementById("usageLimit").value, 10);
                const usageLimitError = document.getElementById("usageLimitError");

                if (!isNaN(usageLimit) && usageLimit < 1) {
                    usageLimitError.textContent = "Usage limit must be at least 1.";
                    usageLimitError.style.display = "block";
                    return false;
                }
                usageLimitError.style.display = "none";
                return true;
            }

            function validateMinimumSpend() {
                const minimumSpend = parseFloat(document.getElementById("minimumSpend").value.trim());
                const minimumSpendError = document.getElementById("minimumSpendError");

                if (isNaN(minimumSpend) || minimumSpend < 0) {
                    minimumSpendError.textContent = "Minimum spend is required and cannot be negative.";
                    minimumSpendError.style.display = "block";
                    return false;
                }
                minimumSpendError.style.display = "none";
                return true;
            }

            // Attach event listeners for real-time validation
            document.getElementById("couponCode").addEventListener("input", validateCouponCode);
            document.getElementById("discountAmount").addEventListener("input", validateDiscountAmount);
            document.getElementById("expiryDate").addEventListener("input", validateExpiryDate);
            document.getElementById("usageLimit").addEventListener("input", validateUsageLimit);
            document.getElementById("minimumSpend").addEventListener("input", validateMinimumSpend);

            // Submit button event listener
            document.getElementById("submitCouponBtn").addEventListener("click", function () {
                const isCouponCodeValid = validateCouponCode();
                const isDiscountAmountValid = validateDiscountAmount();
                const isExpiryDateValid = validateExpiryDate();
                const isUsageLimitValid = validateUsageLimit();
                const isMinimumSpendValid = validateMinimumSpend();

                if (isCouponCodeValid && isDiscountAmountValid && isExpiryDateValid && isUsageLimitValid && isMinimumSpendValid) {
                    // Proceed with the submission
                    const couponCode = document.getElementById("couponCode").value;
                    const discountAmount = document.getElementById("discountAmount").value;
                    const expiryDate = document.getElementById("expiryDate").value;
                    const usageLimit = document.getElementById("usageLimit").value || null;
                    const minimumSpend = document.getElementById("minimumSpend").value;

                    axios
                        .post("/admin/coupon-management/add-coupon", {
                            code: couponCode,
                            discount: discountAmount,
                            expiryDate: expiryDate,
                            usageLimit: usageLimit,
                            minimumSpend: minimumSpend,
                        })
                        .then((response) => {
                            Swal.fire({
                                icon: "success",
                                title: "Coupon added successfully!",
                                customClass: {
                                    confirmButton: "your-custom-class",
                                },
                            }).then(() => {
                                document.getElementById("addCouponModal").style.display = "none";
                                document.getElementById("couponForm").reset();
                                location.reload();
                            });
                        })
                        .catch((error) => {
                            console.error("Error adding coupon:", error);
                            Swal.fire({
                                icon: "error",
                                title: "Failed to add coupon.",
                                customClass: {
                                    confirmButton: "your-custom-class",
                                },
                            });
                        });
                } else {
                    Swal.fire({
                        icon: "error",
                        title: "Please correct the errors before submitting the form.",
                        customClass: {
                            confirmButton: "your-custom-class",
                        },
                    });
                }
            });

            // Function to open the edit coupon modal and populate existing data
            async function openEditCouponModal(couponId) {
                try {
                    const response = await fetch(`/admin/coupon-management/${couponId}`);
                    const coupon = await response.json();

                    if (coupon) {
                        document.getElementById("editCouponId").value = coupon._id; // Populate ID
                        document.getElementById("editCouponCode").value = coupon.code; // Populate code
                        document.getElementById("editDiscountAmount").value = coupon.discount; // Populate discount
                        document.getElementById("editExpiryDate").value = coupon.expiryDate.split("T")[0]; // Format date
                        document.getElementById("editUsageLimit").value = coupon.usageLimit || ""; // Populate usage limit
                        document.getElementById("editMinimumSpend").value = coupon.minimumSpend || ""; // Populate minimum spend

                        // Show the modal
                        document.getElementById("editCouponModal").style.display = "block";
                    }
                } catch (error) {
                    console.error("Error fetching coupon details:", error);
                }
            }

            // Close modal function
            // document.querySelector(".custom-modal-close").addEventListener("click", function () {
            //     console.log("Close button clicked");
            //     document.getElementById("editCouponModal").style.display = "none";
            // });

            // Close modal when clicking outside of the modal content
            window.addEventListener("click", function (event) {
                const modal = document.getElementById("editCouponModal");
                if (event.target === modal) {
                    console.log("Clicked outside the modal");
                    modal.style.display = "none";
                }
            });

            // Event listener for the Update Coupon button
            document.getElementById("submitEditCouponBtn").addEventListener("click", async () => {
                const couponId = document.getElementById("editCouponId").value;
                const updatedCoupon = {
                    code: document.getElementById("editCouponCode").value,
                    discountAmount: document.getElementById("editDiscountAmount").value,
                    expiryDate: document.getElementById("editExpiryDate").value,
                    usageLimit: document.getElementById("editUsageLimit").value,
                    minimumSpend: document.getElementById("editMinimumSpend").value,
                };

                // Make a PUT request to update the coupon
                try {
                    console.log(couponId);

                    const response = await fetch(`/admin/coupon-management/${couponId}`, {
                        method: "PUT",
                        headers: {
                            "Content-Type": "application/json",
                        },
                        body: JSON.stringify(updatedCoupon),
                    });

                    if (response.ok) {
                        Swal.fire({
                            icon: "success",
                            title: "Coupon updated successfully!",
                            customClass: {
                                confirmButton: "your-custom-class",
                            },
                        }).then(() => {
                            document.getElementById("editCouponModal").style.display = "none"; // Hide modal
                            location.reload(); // Reload the page to reflect updates
                        });
                    } else {
                        console.error("Error updating coupon:", error);
                        Swal.fire({
                            icon: "error",
                            title: "Failed to update coupon.",
                            customClass: {
                                confirmButton: "your-custom-class",
                            },
                        });
                    }
                } catch (error) {
                    console.error("Error updating coupon:", error);
                }
            });

            function toggleCouponStatus(couponId, newStatus) {
                Swal.fire({
                    title: `Are you sure you want to ${newStatus} this coupon?`,
                    icon: "warning",
                    showCancelButton: true,
                    confirmButtonText: `Yes, ${newStatus} it!`,
                    cancelButtonText: "No, keep it",
                }).then((result) => {
                    if (result.isConfirmed) {
                        axios
                            .post("/admin/coupons/toggle-status", { couponId, newStatus })
                            .then((response) => {
                                console.log(response);
                                if (response.data.success) {
                                    Swal.fire("Success!", response.data.message, "success").then(() => location.reload());
                                } else {
                                    Swal.fire("Error!", response.data.message, "error");
                                }
                            })
                            .catch((error) => {
                                console.error("Error toggling coupon status:", error);
                                Swal.fire("Error!", "Something went wrong.", "error");
                            });
                    }
                });
            }
        </script>
        <script>
            // // Validate Coupon Code
            // function validateCouponCode() {
            //     const couponCodeInput = document.getElementById("couponCode");
            //     const errorElement = document.getElementById("couponCodeError");
            //     if (couponCodeInput.value.trim().length < 3) {
            //         errorElement.innerText = "Coupon code must be at least 3 characters long.";
            //         errorElement.style.display = "block";
            //     } else {
            //         errorElement.style.display = "none";
            //     }
            // }

            // // Validate Discount Amount
            // function validateDiscountAmount() {
            //     const discountInput = document.getElementById("discountAmount");
            //     const errorElement = document.getElementById("discountAmountError");
            //     if (discountInput.value <= 0) {
            //         errorElement.innerText = "Discount must be a positive number.";
            //         errorElement.style.display = "block";
            //     } else {
            //         errorElement.style.display = "none";
            //     }
            // }

            // // Validate Expiry Date
            // function validateExpiryDate() {
            //     const expiryDateInput = document.getElementById("expiryDate");
            //     const errorElement = document.getElementById("expiryDateError");
            //     const today = new Date().toISOString().split("T")[0]; // Get today's date
            //     if (expiryDateInput.value < today) {
            //         errorElement.innerText = "Expiry date must be in the future.";
            //         errorElement.style.display = "block";
            //     } else {
            //         errorElement.style.display = "none";
            //     }
            // }

            // // Validate Usage Limit
            // function validateUsageLimit() {
            //     const usageLimitInput = document.getElementById("usageLimit");
            //     const errorElement = document.getElementById("usageLimitError");
            //     if (usageLimitInput.value < 0) {
            //         errorElement.innerText = "Usage limit cannot be negative.";
            //         errorElement.style.display = "block";
            //     } else {
            //         errorElement.style.display = "none";
            //     }
            // }

            // // Validate Minimum Spend
            // function validateMinimumSpend() {
            //     const minimumSpendInput = document.getElementById("minimumSpend");
            //     const errorElement = document.getElementById("minimumSpendError");
            //     if (minimumSpendInput.value < 0) {
            //         errorElement.innerText = "Minimum spend cannot be negative.";
            //         errorElement.style.display = "block";
            //     } else {
            //         errorElement.style.display = "none";
            //     }
            // }

            // // Submit Coupon Function
            // function submitCoupon() {
            //     // Validate all fields before submission
            //     validateCouponCode();
            //     validateDiscountAmount();
            //     validateExpiryDate();
            //     validateUsageLimit();
            //     validateMinimumSpend();

            //     // Check if any errors are visible
            //     const errorElements = document.querySelectorAll(".error");
            //     let hasError = false;
            //     errorElements.forEach((error) => {
            //         if (error.style.display === "block") {
            //             hasError = true;
            //         }
            //     });

            //     if (!hasError) {
            //         // Submit the form if all validations pass
            //         document.getElementById("couponForm").submit();
            //     }
            // }

            // Attach onkeyup and onchange events
            document.getElementById("couponCode").onkeyup = validateCouponCode;
            document.getElementById("discountAmount").onkeyup = validateDiscountAmount;
            document.getElementById("expiryDate").onchange = validateExpiryDate;
            document.getElementById("usageLimit").onkeyup = validateUsageLimit;
            document.getElementById("minimumSpend").onkeyup = validateMinimumSpend;

            function validateEditCouponCode() {
                const couponCodeInput = document.getElementById("editCouponCode");
                const errorElement = document.getElementById("editCouponCodeError");
                if (couponCodeInput.value.trim().length < 3) {
                    errorElement.innerText = "Coupon code must be at least 3 characters long.";
                    errorElement.style.display = "block";
                } else {
                    errorElement.style.display = "none";
                }
            }

            // Validate Discount Amount
            function validateEditDiscountAmount() {
                const discountInput = document.getElementById("editDiscountAmount");
                const errorElement = document.getElementById("editDiscountAmountError");
                if (discountInput.value <= 0) {
                    errorElement.innerText = "Discount must be a positive number.";
                    errorElement.style.display = "block";
                } else {
                    errorElement.style.display = "none";
                }
            }

            // Validate Expiry Date
            function validateEditExpiryDate() {
                const expiryDateInput = document.getElementById("editExpiryDate");
                const errorElement = document.getElementById("editExpiryDateError");
                const today = new Date().toISOString().split("T")[0]; // Get today's date
                if (expiryDateInput.value < today) {
                    errorElement.innerText = "Expiry date must be in the future.";
                    errorElement.style.display = "block";
                } else {
                    errorElement.style.display = "none";
                }
            }

            // Validate Usage Limit
            function validateEditUsageLimit() {
                const usageLimitInput = document.getElementById("editUsageLimit");
                const errorElement = document.getElementById("editUsageLimitError");
                if (usageLimitInput.value < 0) {
                    errorElement.innerText = "Usage limit cannot be negative.";
                    errorElement.style.display = "block";
                } else {
                    errorElement.style.display = "none";
                }
            }

            // Validate Minimum Spend
            function validateEditMinimumSpend() {
                const minimumSpendInput = document.getElementById("editMinimumSpend");
                const errorElement = document.getElementById("editMinimumSpendError");
                if (minimumSpendInput.value < 0) {
                    errorElement.innerText = "Minimum spend cannot be negative.";
                    errorElement.style.display = "block";
                } else {
                    errorElement.style.display = "none";
                }
            }

            // Submit Coupon Function
            function submitEditCoupon() {
                // Validate all fields before submission
                validateEditCouponCode();
                validateEditDiscountAmount();
                validateEditExpiryDate();
                validateEditUsageLimit();
                validateEditMinimumSpend();

                // Check if any errors are visible
                const errorElements = document.querySelectorAll(".error");
                let hasError = false;
                errorElements.forEach((error) => {
                    if (error.style.display === "block") {
                        hasError = true;
                    }
                });

                if (!hasError) {
                    // Submit the form if all validations pass
                    document.getElementById("editCouponForm").submit();
                }
            }

            // Attach onkeyup and onchange events
            document.getElementById("editCouponCode").onkeyup = validateEditCouponCode;
            document.getElementById("editDiscountAmount").onkeyup = validateEditDiscountAmount;
            document.getElementById("editExpiryDate").onchange = validateEditExpiryDate;
            document.getElementById("editUsageLimit").onkeyup = validateEditUsageLimit;
            document.getElementById("editMinimumSpend").onkeyup = validateEditMinimumSpend;
        </script>
    </body>
</html>
