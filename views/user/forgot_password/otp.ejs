<!DOCTYPE html>
<html lang="en">
    <head>
        <meta charset="UTF-8" />
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <title>OTP Verification</title>
        <style>
            body {
                font-family: Arial, sans-serif;
                background-color: #f3f4f6;
                display: flex;
                justify-content: center;
                align-items: center;
                height: 100vh;
                margin: 0;
            }
            .card {
                background-color: white;
                border-radius: 8px;
                box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
                padding: 2rem;
                width: 100%;
                max-width: 400px;
                text-align: center;
            }
            .card-title {
                font-size: 1.5rem;
                font-weight: bold;
                margin-bottom: 0.5rem;
                text-align: center;
            }
            .card-description {
                color: #6b7280;
                margin-bottom: 1.5rem;
            }
            .form-group {
                margin-bottom: 1rem;
            }
            label {
                display: block;
                margin-bottom: 0.5rem;
                font-weight: bold;
            }
            .otp-inputs {
                display: flex;
                gap: 0.5rem;
                justify-content: center;
                margin: 30px 0px;
            }
            .otp-input {
                width: 2.5rem;
                height: 2.5rem;
                text-align: center;
                font-size: 1.25rem;
                border: 1px solid #d1d5db;
                border-radius: 4px;
            }
            .timer {
                font-size: 0.875rem;
                color: #6b7280;
                margin-top: 1rem;
            }
            .resend-button {
                background: none;
                border: none;
                color: #5c59e8;
                cursor: pointer;
                font-size: 0.875rem;
                padding: 0;
                text-decoration: underline;
            }
            .resend-button:disabled {
                color: #6b7280;
                cursor: not-allowed;
                text-decoration: none;
            }
            .submit-button {
                width: 100%;
                padding: 0.75rem;
                background-color: #5c59e8;
                color: white;
                border: none;
                border-radius: 4px;
                font-size: 1rem;
                cursor: pointer;
                transition: background-color 0.3s;
                margin-top: 1rem;
            }
            .submit-button:hover {
                background-color: #3533a9;
            }

            .error-message {
                background-color: #f8d7da;
                color: #721c24;
                border: 1px solid #f5c6cb;
                padding: 10px 15px;
                border-radius: 5px;
                font-size: 14px;
                font-weight: bold;
                margin: 10px 0;
                text-align: center;
                max-width: 400px;
                margin-left: auto;
                margin-right: auto;
            }
        </style>
    </head>
    <body>
        <div class="card">
            <h2 class="card-title">Enter OTP</h2>
            <p class="card-description">We've sent a one-time password to your email</p>

            <% if (message) { %>
            <p class="error-message" id="error"><%= message %></p>
            <% } %>

            <form id="otp-form" action="/login/enter-email/otp-enter" method="post">
                <div class="form-group">
                    <label for="otp-1">One-Time Password</label>
                    <div class="otp-inputs">
                        <input type="text" id="otp-1" name="otp1" class="otp-input" maxlength="1" inputmode="numeric" autocomplete="one-time-code" required />
                        <input type="text" id="otp-2" name="otp2" class="otp-input" maxlength="1" inputmode="numeric" autocomplete="one-time-code" required />
                        <input type="text" id="otp-3" name="otp3" class="otp-input" maxlength="1" inputmode="numeric" autocomplete="one-time-code" required />
                        <input type="text" id="otp-4" name="otp4" class="otp-input" maxlength="1" inputmode="numeric" autocomplete="one-time-code" required />
                        <input type="text" id="otp-5" name="otp5" class="otp-input" maxlength="1" inputmode="numeric" autocomplete="one-time-code" required />
                        <input type="text" id="otp-6" name="otp6" class="otp-input" maxlength="1" inputmode="numeric" autocomplete="one-time-code" required />
                    </div>
                </div>
                <div class="timer" id="timer" style="color: red">Resend OTP in 30 seconds</div>
                <button type="button" id="resend-button" class="resend-button" disabled>Resend OTP</button>
                <button type="submit" class="submit-button">Verify OTP</button>
            </form>
        </div>

        <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>

        <script>
            document.addEventListener("DOMContentLoaded", function () {
                const otpInputs = document.querySelectorAll(".otp-input");
                const form = document.getElementById("otp-form");
                const timerElement = document.getElementById("timer");
                const resendButton = document.getElementById("resend-button");
                let timer;
                let interval;

                function initializeTimer() {
                    const otpStartTime = localStorage.getItem("otpStartTime");
                    if (otpStartTime) {
                        const elapsedSeconds = Math.floor((Date.now() - parseInt(otpStartTime)) / 1000);
                        const initialDuration = 180; // 3 minutes
                        timer = Math.max(0, initialDuration - elapsedSeconds);

                        if (timer > 0) {
                            startTimer();
                        } else {
                            resetTimer();
                        }
                    } else {
                        timer = 180;
                        startTimer();
                    }
                }

                function formatTime(seconds) {
                    const minutes = Math.floor(seconds / 60);
                    const remainingSeconds = seconds % 60;
                    return `${String(minutes).padStart(2, "0")}:${String(remainingSeconds).padStart(2, "0")}`;
                }

                function startTimer() {
                    // Clear any existing interval first
                    clearInterval(interval);

                    // Disable resend button
                    resendButton.disabled = true;

                    // Update timer display immediately
                    updateTimerDisplay();

                    // Store start time in localStorage
                    if (!localStorage.getItem("otpStartTime")) {
                        localStorage.setItem("otpStartTime", Date.now().toString());
                    }

                    interval = setInterval(() => {
                        timer--;

                        if (timer <= 0) {
                            resetTimer();
                        } else {
                            updateTimerDisplay();
                        }
                    }, 1000);
                }

                function updateTimerDisplay() {
                    timerElement.textContent = `Resend OTP in ${formatTime(timer)}`;
                }

                function resetTimer() {
                    clearInterval(interval);
                    timerElement.textContent = "";
                    resendButton.disabled = false;
                    localStorage.removeItem("otpStartTime");
                }

                // Initialize timer on page load
                initializeTimer();

                // Handle OTP input navigation
                otpInputs.forEach((input, index) => {
                    input.addEventListener("input", (e) => {
                        const value = e.target.value;

                        // Ensure only numbers are entered
                        if (value && !/^\d+$/.test(value)) {
                            e.target.value = "";
                            return;
                        }

                        if (value.length === 1 && index < otpInputs.length - 1) {
                            otpInputs[index + 1].focus();
                        }
                    });

                    input.addEventListener("keydown", (e) => {
                        if (e.key === "Backspace" && e.target.value.length === 0 && index > 0) {
                            otpInputs[index - 1].focus();
                        }
                    });
                });

                // Handle resend button click
                resendButton.addEventListener("click", () => {
                    console.log("Resending OTP...");

                    axios
                        .post("/login/enter-email/resend-otp")
                        .then((response) => {
                            if (response.status === 200) {
                                console.log("OTP resent successfully:", response.data);
                                timer = 180; // Reset timer to 3 minutes
                                localStorage.removeItem("otpStartTime"); // Clear existing timer
                                startTimer(); // Start fresh timer
                            }
                        })
                        .catch((error) => {
                            console.error("Error resending OTP:", error);
                            // Optionally show error message to user
                        });
                });

                // Handle form submission
                form.addEventListener("submit", (e) => {
                    const otp = Array.from(otpInputs)
                        .map((input) => input.value)
                        .join("");

                    const hiddenInput = document.createElement("input");
                    hiddenInput.type = "hidden";
                    hiddenInput.name = "otp";
                    hiddenInput.value = otp;
                    form.appendChild(hiddenInput);
                });
            });
        </script>
    </body>
</html>
